on: [push, pull_request]

env:
  GHIDRA_VERSION: "10.1.4"
  LOG_PATH: "example/analysis.log"
  REPORT_PATH: "example/analysis.xml"

jobs:
  report:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout efiSeek
      uses: actions/checkout@v2
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "11.0"
        cache: "gradle"
    - uses: er28-0652/setup-ghidra@0.0.6
      with:
        version: ${{ env.GHIDRA_VERSION }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Setup Gradle and Build efiSeek
      uses: gradle/gradle-build-action@v2
      with:
        arguments: --warning-mode all
    - name: Install efiSeek
      run: |
        DIST_PATH="$(pwd)/dist/ghidra_${{ env.GHIDRA_VERSION }}_PUBLIC_$(date +%Y%m%d)_efiSeek.zip"
        GHIDRA_EXTENSION_DIR="~/.ghidra/.ghidra_${{ env.GHIDRA_VERSION }}_PUBLIC/Extensions"
        mkdir -p $GHIDRA_EXTENSION_DIR
        unzip -q -d $GHIDRA_EXTENSION_DIR $DIST_PATH
    - name: Execute headless Ghidra
      run: |
        mkdir -p $PROJECT_DIR
        ${{ env.GHIDRA_INSTALL_DIR }}/support/analyzeHeadless $PROJECT_DIR $PROJECT_NAME -import $IMPORT_PATH -log ${{ env.LOG_PATH }}
      env:
        PROJECT_DIR: "example"
        PROJECT_NAME: "example"
        IMPORT_PATH: "example/DoubleGetVariable.efi"
    - name: Upload Ghidra log
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: analysis.log
        path: ${{ env.LOG_PATH }}
    - name: Generate JUnit XML reports
      run: python scripts/gen_report.py ${{ env.LOG_PATH }} ${{ env.REPORT_PATH }}
    - name: Publish JUnit test results
      uses: EnricoMi/publish-unit-test-result-action@v1.36
      with:
        files: ${{ env.REPORT_PATH }}
